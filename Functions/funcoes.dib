#!meta

{"kernelInfo":{"defaultKernelName":"fsharp","items":[{"aliases":[],"name":".NET"},{"aliases":["F#","f#"],"languageName":"F#","name":"fsharp"},{"aliases":["js"],"languageName":"JavaScript","name":"javascript"},{"aliases":["frontend"],"name":"vscode"},{"aliases":[],"name":"webview"}]}}

#!markdown

##Criar funções

#!fsharp

let add a b = a + b 
add 1 2 

#!fsharp

let addAndMultiply a b c = 
    let sum = a + b
    let product = sum * c
    product
addAndMultiply 1 2 3 

#!fsharp

let add a b = a + b
// let sum = add 2 2 
let concat = add "hello" "world" // will give compilation error

#!fsharp

let cardFace card = 
   let no = card % 13
   if no = 1 then "Ace"
   elif no = 0 then "King"
   elif no = 12 then "Queen"
   elif no = 11 then "Jack"
   else string no

#!markdown

Adicionar tipos

#!fsharp

let cardFace (card:int) :string = 
    let no = card % 13
    if no = 1 then "Ace"
    elif no = 0 then "King"
    elif no = 12 then "Queen"
    elif no = 11 then "Jack"
    else string no

#!fsharp

let rec calculaJuros (juros:float) (meta:float) (action:float->float->float) (interacao:int) (mount:float) =
    match mount with
    |var1 when var1 >= meta ->  (interacao,mount)
    |var1 when var1 < 0 -> (interacao,mount)
    |_ -> calculaJuros juros meta action (interacao+1) (action mount juros)

#!fsharp

let jurosFun (mount:float) (juros:float) = (mount*(1.+juros))+1800.0

#!fsharp

let calculo = calculaJuros (1.12/100.0) 10000 jurosFun

#!fsharp

let reorden action before after =
    

#!fsharp

let jurosFun (montante:float) (juros:float) = (montante*(1.+juros))+1500.0 
let jurosFixo = jurosFun 0.05
